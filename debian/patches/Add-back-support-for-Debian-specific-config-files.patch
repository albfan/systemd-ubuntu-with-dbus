From: Michael Biebl <biebl@debian.org>
Date: Thu, 18 Jul 2013 20:11:02 +0200
Subject: Add back support for Debian specific config files

For now fallback to read the locale settings from /etc/default/locale.

This reverts the Debian specific bits from
46a2911bf2780f616396df5671dd901cc7cb54fd
99f861310d3f05f4e86cb9582a94b891dbb3382b
---
 src/core/locale-setup.c  | 22 ++++++++++++++++++++++
 src/timedate/timedated.c | 20 ++++++++++++++++++--
 2 files changed, 40 insertions(+), 2 deletions(-)

diff --git a/src/core/locale-setup.c b/src/core/locale-setup.c
index e993c57..480aa7c 100644
--- a/src/core/locale-setup.c
+++ b/src/core/locale-setup.c
@@ -83,6 +83,28 @@ int locale_setup(char ***environment) {
                         log_warning_errno(r, "Failed to read /etc/locale.conf: %m");
         }
 
+        if (r <= 0) {
+                r = parse_env_file("/etc/default/locale", NEWLINE,
+                                   "LANG",              &variables[VARIABLE_LANG],
+                                   "LANGUAGE",          &variables[VARIABLE_LANGUAGE],
+                                   "LC_CTYPE",          &variables[VARIABLE_LC_CTYPE],
+                                   "LC_NUMERIC",        &variables[VARIABLE_LC_NUMERIC],
+                                   "LC_TIME",           &variables[VARIABLE_LC_TIME],
+                                   "LC_COLLATE",        &variables[VARIABLE_LC_COLLATE],
+                                   "LC_MONETARY",       &variables[VARIABLE_LC_MONETARY],
+                                   "LC_MESSAGES",       &variables[VARIABLE_LC_MESSAGES],
+                                   "LC_PAPER",          &variables[VARIABLE_LC_PAPER],
+                                   "LC_NAME",           &variables[VARIABLE_LC_NAME],
+                                   "LC_ADDRESS",        &variables[VARIABLE_LC_ADDRESS],
+                                   "LC_TELEPHONE",      &variables[VARIABLE_LC_TELEPHONE],
+                                   "LC_MEASUREMENT",    &variables[VARIABLE_LC_MEASUREMENT],
+                                   "LC_IDENTIFICATION", &variables[VARIABLE_LC_IDENTIFICATION],
+                                   NULL);
+
+                if (r < 0 && r != -ENOENT)
+                        log_warning("Failed to read /etc/default/locale: %s", strerror(-r));
+        }
+
         add = NULL;
         for (i = 0; i < _VARIABLE_LC_MAX; i++) {
                 char *s;
diff --git a/src/timedate/timedated.c b/src/timedate/timedated.c
index f2d23f3..bb10e7c 100644
--- a/src/timedate/timedated.c
+++ b/src/timedate/timedated.c
@@ -74,7 +74,7 @@ static int context_read_data(Context *c) {
         r = readlink_malloc("/etc/localtime", &t);
         if (r < 0) {
                 if (r == -EINVAL)
-                        log_warning("/etc/localtime should be a symbolic link to a time zone data file in /usr/share/zoneinfo/.");
+                        log_debug("/etc/localtime should be a symbolic link to a time zone data file in /usr/share/zoneinfo/.");
                 else
                         log_warning_errno(r, "Failed to get target of /etc/localtime: %m");
         } else {
@@ -85,7 +85,7 @@ static int context_read_data(Context *c) {
                         e = path_startswith(t, "../usr/share/zoneinfo/");
 
                 if (!e)
-                        log_warning("/etc/localtime should be a symbolic link to a time zone data file in /usr/share/zoneinfo/.");
+                        log_debug("/etc/localtime should be a symbolic link to a time zone data file in /usr/share/zoneinfo/.");
                 else {
                         c->zone = strdup(e);
                         if (!c->zone)
@@ -95,6 +95,12 @@ static int context_read_data(Context *c) {
                 }
         }
 
+        r = read_one_line_file("/etc/timezone", &c->zone);
+        if (r < 0) {
+                if (r != -ENOENT)
+                        log_warning("Failed to read /etc/timezone: %s", strerror(-r));
+        }
+
 have_timezone:
         if (isempty(c->zone)) {
                 free(c->zone);
@@ -109,6 +115,7 @@ have_timezone:
 static int context_write_data_timezone(Context *c) {
         _cleanup_free_ char *p = NULL;
         int r = 0;
+        struct stat st;
 
         assert(c);
 
@@ -116,6 +123,9 @@ static int context_write_data_timezone(Context *c) {
                 if (unlink("/etc/localtime") < 0 && errno != ENOENT)
                         r = -errno;
 
+                if (unlink("/etc/timezone") < 0 && errno != ENOENT)
+                        r = -errno;
+
                 return r;
         }
 
@@ -127,6 +137,12 @@ static int context_write_data_timezone(Context *c) {
         if (r < 0)
                 return r;
 
+        if (stat("/etc/timezone", &st) == 0 && S_ISREG(st.st_mode)) {
+                r = write_string_file_atomic("/etc/timezone", c->zone);
+                if (r < 0)
+                        return r;
+        }
+
         return 0;
 }
 
