From: Martin Pitt <martin.pitt@ubuntu.com>
Date: Thu, 12 Feb 2015 10:30:00 +0100
Subject: core/mount: ensure that we parse /proc/self/mountinfo

util-linux' mnt_table_parse_mtab() still defaults to parsing /etc/mtab. So if
that is a file [1] , we parse outdated information during boot, leading to creating
mount units for nonexisting mounts which later have to get cleaned up. The
cleanup races with mounting them from fstab, which sometimes causes fstab
mounts to get unmounted again during boot.

So explicitly specify a file that we actually want to parse. Unfortunately
util-linux < 2.26 has a bug that ignores /run/mount/utab when you specify
"/proc/self/mountinfo"; that got fixed in

  https://github.com/karelzak/util-linux/commit/60d29f827

Use an invalid file name to trigger libmount's fallback to
/proc/self/mountinfo.

This patch can be dropped once util-linux stops defaulting to /etc/mtab for
mnt_table_parse_mtab() (which is planned).

[1] first boot after a distro upgrade, or a package bug, or administrators
    configuring it explicitly for some reason

https://launchpad.net/bugs/1419623
---
 src/core/mount.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/src/core/mount.c b/src/core/mount.c
index 3ae0eb4..a472f84 100644
--- a/src/core/mount.c
+++ b/src/core/mount.c
@@ -1570,7 +1570,11 @@ static int mount_load_proc_self_mountinfo(Manager *m, bool set_flags) {
         if (!i)
                 return log_oom();
 
-        r = mnt_table_parse_mtab(t, NULL);
+        /* FIXME: We really mean "/proc/self/mountinfo" here, but as that's a
+         * regular file this will trick libmount into not parsing
+         * /run/mount/utab; so give it an invalid file to trigger the fallback
+         * to /proc/self/mountinfo. */
+        r = mnt_table_parse_mtab(t, "/");
         if (r < 0)
                 return log_error_errno(r, "Failed to parse /proc/self/mountinfo: %m");
 
